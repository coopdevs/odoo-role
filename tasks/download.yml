---
# Odoo release packed in a compressed file supported by gtar or unzip
- name: Download an Odoo release tar packet
  block:
  - name: Ensure download path exists
    file:
      path: "{{ odoo_role_odoo_download_path | dirname }}"
      state: directory
      owner: "{{ odoo_role_odoo_user }}"
      group: "{{ odoo_role_odoo_group }}"

  - name: Download Odoo
    get_url:
      url: "{{ odoo_role_odoo_url }}"
      dest: "{{ odoo_role_odoo_download_path }}"
      owner: "{{ odoo_role_odoo_user }}"
      group: "{{ odoo_role_odoo_group }}"
    register: odoo_role_desired_tar_download

  - name: Clean older release packets
    vars:
      dirname: "{{ odoo_role_odoo_download_path | dirname }}"
      basename: "{{ odoo_role_odoo_download_path | basename }}"
    # Find under download path dir, all elements of type file, such that
    # they don't have a name that it's the one of the file we just downloaded.
    # For each match, delete it and print it's path, so that
    # we can tell from the output wether anything got found-deleted or not.
    command: "find {{ dirname }} -type f -not -name '{{ basename }}' -delete -print"
    register: find
    changed_when: find.stdout != ""

  - name: Clean target directory
    file:
      path: "{{ odoo_role_odoo_path }}"
      state: "{{ item }}"
      owner: "{{ odoo_role_odoo_user }}"
      group: "{{ odoo_role_odoo_group }}"
    with_items:
      - absent
      - directory
    when: odoo_role_desired_tar_download.changed

  - name: Uncompress downloaded Odoo
    unarchive:
      src: "{{ odoo_role_odoo_download_path }}"
      dest: "{{ odoo_role_odoo_path }}"
      remote_src: yes
      owner: "{{ odoo_role_odoo_user }}"
      group: "{{ odoo_role_odoo_group }}"
      extra_opts: [--strip-components=1]
    when: odoo_role_desired_tar_download.changed

  when: odoo_role_download_strategy == "tar"


# Odoo from the OCA/OCB repository: https://github.com/OCA/OCB
- name: "Git clone git reference {{ odoo_role_odoo_git_ref }}"
  become: yes
  become_user: "{{ odoo_role_odoo_user }}"
  git:
    repo: "{{ odoo_role_odoo_git_url }}"
    dest: "{{ odoo_role_odoo_path }}"
    version: "{{ odoo_role_odoo_git_ref }}"
    depth: 1
    force: yes
  register: odoo_role_desired_git_download
  when: odoo_role_download_strategy == "git"
