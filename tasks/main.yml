---
- import_tasks: create-user.yml

- name: Install system packages
  become: yes
  apt:
    update_cache: yes
    pkg:
      - build-essential
      - python3-dev
      - python3-setuptools
      - libxml2
      - libxml2-dev
      - libxslt1-dev
      - libssl-dev
      - libldap2-dev
      - libsasl2-dev
      - git
    state: present

- name: Check if wkhtmltopdf is installed
  shell: set -o pipefail && dpkg -s wkhtmltox | grep 'install ok installed'
  args:
    executable: /bin/bash
  register: wkhtmltox_installed
  failed_when: false
  changed_when: no

- name: Download and install wkhtmltopdf only if not already present at any version
  apt:
    deb: "https://downloads.wkhtmltopdf.org/0.12/0.12.5/wkhtmltox_0.12.5-1.{{ ansible_distribution_release }}_amd64.deb"
  when: wkhtmltox_installed.rc == 1

- import_tasks: virtualenv.yml

- name: Create Odoo directories
  become: yes
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ odoo_role_odoo_user }}"
    group: "{{ odoo_role_odoo_group }}"
    mode: 02775
  loop:
    - "{{ odoo_role_odoo_path }}"
    - "{{ odoo_role_odoo_config_path }}"
    - "{{ odoo_role_odoo_modules_path }}"

- name: Create log dir
  become: yes
  file:
    path: "{{ odoo_role_odoo_log_path }}"
    state: directory
    group: "{{ odoo_role_odoo_group }}"
    mode: 02775

- name: Create log file
  become: yes
  file:
    path: "{{ odoo_role_odoo_log_path }}/odoo.log"
    group: "{{ odoo_role_odoo_group }}"
    state: touch
    mode: 02775

- import_tasks: download.yml

- name: Install Odoo python requirements
  pip:
    requirements: "{{ odoo_role_odoo_path }}/requirements.txt"
    virtualenv: "{{ odoo_role_odoo_venv_path }}"

- name: Install nodejs packages
  become: yes
  apt:
    pkg:
      - nodejs
      - npm
    state: present

- name: Install Less CSS via nodejs
  become: yes
  npm:
    name: less
    version: 2.7.2
    global: yes

# This link is needed in Ubuntu 16.04 and in Ubuntu 18.04 raise and error.
- name: Create node symlink
  become: yes
  file:
    src: /usr/bin/nodejs
    dest: /usr/bin/node
    state: link
  when: ansible_distribution == "Ubuntu" and not ansible_distribution_version == "18.04"

- name: Install Odoo
  become: yes
  become_user: "{{ odoo_role_odoo_user }}"
  shell: "cd {{ odoo_role_odoo_path }} && {{ odoo_role_odoo_python_path }} setup.py install"
  when: odoo_role_desired_tar_download.changed or odoo_role_desired_git_download.changed

- name: Add Odoo config
  become: yes
  template:
    src: odoo.conf.j2
    dest: "{{ odoo_role_odoo_config_path }}/odoo.conf"
    mode: 0774
    owner: "{{ odoo_role_odoo_user }}"
    group: "{{  odoo_role_odoo_group }}"
  notify: restart odoo

- name: Check if Odoo database has been initialized ("0" false, "1" true)
  become: yes
  become_user: "{{ odoo_role_odoo_user }}"
  shell: >
    psql {{ item }} -tAc
    "SELECT COUNT(*)
    FROM information_schema.tables
    WHERE table_name='ir_module_module';"
  register: db_initialized
  with_items: "{{ odoo_role_odoo_dbs }}"
  changed_when: false

- name: "Init Odoo database(s): odoo_role_odoo_dbs"
  become: yes
  become_user: "{{ odoo_role_odoo_user }}"
  command: >
    {{ odoo_role_odoo_python_path }} {{ odoo_role_odoo_bin_path }}
    -c {{ odoo_role_odoo_config_path }}/odoo.conf
    -d {{ item }}
    --init base
    --stop-after-init
    {% if not odoo_role_demo_data %}
    --without-demo=all
    {% endif %}
    --logfile=/dev/stdout
    --log-level=warn
  when: db_initialized.results[index].stdout == "0"
  notify: restart odoo
  with_items: "{{ odoo_role_odoo_dbs }}"
  loop_control:
    index_var: index

- import_tasks: community-modules.yml

- name: Build the list of new modules to install
  become: yes
  become_user: "{{ odoo_role_odoo_user }}"
  shell: >
    psql {{ item }} -tAc
    "SELECT name
    FROM (VALUES ('{{ (odoo_role_odoo_core_modules + ',' + odoo_role_community_odoo_modules).split(',') | join(separator) }}'))
    AS t (name)
    EXCEPT
    SELECT name
    FROM ir_module_module
    WHERE state = 'installed';"
  register: modules_to_install
  vars:
    - separator: "'), ('"
  with_items: "{{ odoo_role_odoo_dbs }}"
  changed_when: false

- name: Install only new Odoo modules
  become: yes
  become_user: "{{ odoo_role_odoo_user }}"
  command: >
    {{ odoo_role_odoo_python_path }} {{ odoo_role_odoo_bin_path }}
    -c {{ odoo_role_odoo_config_path }}/odoo.conf
    -d {{ item }}
    --init {{ modules_to_install.results[index].stdout_lines | join(',') }}
    --stop-after-init
    {% if not odoo_role_demo_data %}
    --without-demo=all
    {% endif %}
    --logfile=/dev/stdout
    --log-level=warn
  when: modules_to_install.results[index].stdout
  with_items: "{{ odoo_role_odoo_dbs }}"
  loop_control:
    index_var: index
  notify: restart odoo

- import_tasks: add-service.yml
