---
- name: Copy requirements.txt
  copy:
    src: "{{ odoo_role_community_modules_requirements_path }}"
    dest: "{{ odoo_role_odoo_modules_path }}/requirements.txt"
    owner: "{{ odoo_role_odoo_user }}"
    group: "{{ odoo_role_odoo_group }}"
    mode: 0644
  tags: ['community-modules', 'only-modules']

- name:  Read requirements.txt and filter packages without pinned versions
  shell: |
    grep -vE '==[0-9]' {{ odoo_role_odoo_modules_path }}/requirements.txt | grep -v '^#' | grep -v '^\s*$' || true
  register: upgradable_packages
  tags: ['community-modules', 'only-modules']

- name: Upgrade non-pinned packages to latest version using virtualenv
  pip:
    name: "{{ item }}"
    state: latest
    virtualenv: "{{ odoo_role_odoo_venv_path }}"
  become: true
  become_user: "{{ odoo_role_odoo_user }}"
  loop: "{{ upgradable_packages.stdout_lines }}"
  when: upgradable_packages.stdout_lines is defined and upgradable_packages.stdout_lines | length > 0
  tags: ['community-modules', 'only-modules']

- name: Install pinned packages (without upgrade, using virtualenv)
  shell: |
    source "{{ odoo_role_odoo_venv_path }}bin/activate" && grep -E '==[0-9]' {{ odoo_role_odoo_modules_path }}/requirements.txt | grep -v '^#' | grep -v '^\s*$' | xargs -r pip install
  register: reg_pip
  become: true
  become_user: "{{ odoo_role_odoo_user }}"
  args:
    executable: /bin/bash    
  tags: ['community-modules', 'only-modules']

- name: Detect upgraded packages
  args:
    # Example input (delete '# ' from each line below)
    #
    # Installing collected packages: odoo11-addon-account-financial-report
    # Found existing installation: odoo11-addon-account-financial-report 11.0.2.4.3
    # Uninstalling odoo11-addon-account-financial-report-11.0.2.4.3:
    #  Successfully uninstalled odoo11-addon-account-financial-report-11.0.2.4.3
    # Successfully installed odoo11-addon-account-financial-report-11.0.2.5.1.99.dev12 odoo11-addon-l10n-es-aeat-mod303-11.0.2.1.0
    stdin: "{{ reg_pip.stdout }}"
    executable: bash
  # Expected "output" using input from above (delete '# ' from each line below)
  # note: "output" means `reg_pip_upgraded.stdout`
  # note: to debug the second regexp you can use https://regexr.com/4l2c3
  #
  # account-financial-report
  # l10n-es-aeat-mod303

  # About sed:
  # - option `-r` switches to standard perl regexp, instead of GNU ones. Similar to `egrep` or `grep -E`
  # - option `-n` combined with flag `/p` prints "nothing" except the result of the script. Therefore, unmatching lines are hidden, and matching lines are shown after processed.
  # - capturing groups `(something)` can be referenced inside the matching part or at the replacing part with \1, \2, in order of appearence.
  shell: >
    echo "{{ reg_pip.stdout | default('') }}" | \
    grep 'Successfully installed' |
    sed -r 's/ /\n/g' |
    sed -rn 's/^odoo1?[0-9]?-addon-(.+)-[0-9].*$/\1/p' |
    tr '-' '_'
  register: reg_pip_upgraded
  changed_when: reg_pip_upgraded.stdout
  failed_when: false # noqa 306 "shell and pipefail". Both grep and sed must be able to fail
  tags: ['community-modules', 'only-modules']
  args:
    executable: /bin/bash
